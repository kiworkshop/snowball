plugins {
    id 'org.springframework.boot' version '2.3.4.RELEASE'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.8'
    id 'java'
    id "com.github.node-gradle.node" version "2.2.0"
}

group = 'org.kiworkshop'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

def webappDir = "$projectDir/src/frontend"

node {
    download = true
    version = "12.13.1"
    yarnVersion = '1.22.5'
    nodeModulesDir = project.file("${project.projectDir}/src/frontend/node_modules")
    workDir = project.file("${project.projectDir}/src/frontend/nodejs")
    yarnWorkDir = project.file("${project.projectDir}/src/frontend/yarn")
}

task yarnInstall(type: YarnTask) {
    workingDir = file("${project.projectDir}/src/frontend")
    args = ["install"]
}

task yarnBuild(type: YarnTask) {
    workingDir = file("${project.projectDir}/src/frontend")
    args = ['build']
}

task copyWebApp(type: Copy) {
    from "src/frontend/build/"
    into 'build/resources/main/'
}

yarnBuild.dependsOn yarnInstall
copyWebApp.dependsOn yarnBuild
compileJava.dependsOn copyWebApp